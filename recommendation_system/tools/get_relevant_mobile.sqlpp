--
-- The following file is a template for a (Couchbase) SQL++ query tool.
--

-- All SQL++ query tools are specified using a valid SQL++ (.sqlpp) file.
-- The tool metadata must be specified with YAML inside a multi-line C-style comment.
/*
# The name of the tool must be a valid Python identifier (e.g., no spaces).
# This field is mandatory, and will be used as the name of a Python function.
name: find_relevant_mobiles

# A description for the function bound to this tool.
# This field is mandatory, and will be used in the docstring of a Python function.
description: >
    Given ram, storage, rating and price find the mobiles which are satisfying the criteria.

# The inputs used to resolve the named parameters in the SQL++ query below.
# Inputs are described using a JSON object that follows the JSON schema standard.
# This field is mandatory, and will be used to build a Pydantic model.
# See https://json-schema.org/learn/getting-started-step-by-step for more info.
input: >
    {
      "type": "object",
      "properties": {
        "ram": { "type": "integer" },
        "storage": { "type": "integer" },
        "rating": {"type": "integer" },
        "price": {"type": "integer" }
      }
    }

# The outputs used describe the structure of the SQL++ query result.
# Outputs are described using a JSON object that follows the JSON schema standard.
# This field is optional, and will be used to build a Pydantic model.
# We recommend using the 'INFER' command to build a JSON schema from your query results.
# See https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/infer.html.
# In the future, this field will be optional (we will INFER the query automatically for you).
output: >
     {
       "type": "array",
       "items": {
         "type": "object",
         "properties": {
           "name": { "type": "string" }
         }
       }
     }

# As a supplement to the tool similarity search, users can optionally specify search annotations.
# The values of these annotations MUST be strings (e.g., not 'true', but '"true"').
# This field is optional, and does not have to be present.
#annotations:
#  gdpr_2016_compliant: "false"
#  ccpa_2019_compliant: "true"

# The "secrets" field defines search keys that will be used to query a "secrets" manager.
# Note that these values are NOT the secrets themselves, rather they are used to lookup secrets.
secrets:

    # All Couchbase tools (e.g., semantic search, SQL++) must specify conn_string, username, and password.
    - couchbase:
        conn_string: CB_CONN_STRING
        username: CB_USERNAME
        password: CB_PASSWORD
*/

SELECT
  name
FROM
  ecommerce.devices.smartphones
WHERE ram >= $ram AND storage >= $storage AND rating >= $rating AND price <= $price ORDER BY rating DESC LIMIT 30;